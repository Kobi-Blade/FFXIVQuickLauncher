name: Build XIVLauncher
on: [push, pull_request]
concurrency: build_xl

jobs:
  build-release:
    name: Build Release on Windows
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: windows-2022
    permissions:
      id-token: write
      contents: write # Must be 'write' to create a release
      attestations: write
    steps:
#      - uses: nadock/verified_commits_check@f9b330e987c2e7121dfc0230e65cb5751ee5fac9
      - uses: actions/checkout@v1
      - name: Initialize Submodules
        run: git submodule update --init --recursive
      - name: Install VPK
        run: |
          dotnet tool install -g vpk
      - name: Publish XIVLauncher
        run: |
          cd src/XIVLauncher
          dotnet publish --self-contained -r win-x64 -o publish
      - name: Publish XIVLauncher.Patcher # This is to fix the missing .deps.json
        run: |
          cd src/XIVLauncher.PatchInstaller
          dotnet publish --self-contained -r win-x64 -o publish
      - name: Combine Publishes # This is to fix the missing .deps.json but skips same files
        run: |
          $SourceFolder = "./src/XIVLauncher.PatchInstaller/publish"
          $DestinationFolder = "./src/XIVLauncher/publish"
          robocopy $SourceFolder $DestinationFolder /S /E /XO /IT
          $lastExitCode = $LASTEXITCODE
          if ($lastExitCode -eq 0) {
            Write-Host "Robocopy completed successfully with no changes."
          } elseif ($lastExitCode -eq 1) {
            Write-Host "Robocopy completed successfully; All files were copied successfully."
          } elseif ($lastExitCode -eq 2) {
            Write-Host "Robocopy completed successfully; There are some additional files in the destination directory that aren't present in the source directory. No files were copied."
          } elseif ($lastExitCode -eq 3) {
            Write-Host "Robocopy completed successfully; Some files were copied. Additional files were present. No failure was met."
          } elseif ($lastExitCode -eq 5) {
            Write-Host "Robocopy completed successfully; Some files were copied. Some files were mismatched. No failure was met."
          } elseif ($lastExitCode -eq 6) {
            Write-Host "Robocopy completed successfully; Additional files and mismatched files exist. No files were copied and no failures were met. Which means that the files already exist in the destination directory."
          } elseif ($lastExitCode -eq 7) {
            Write-Host "Robocopy completed successfully; Files were copied, a file mismatch was present, and additional files were present."
          } else {
            Write-Error "Robocopy encountered errors. Exit code: $lastExitCode"
            exit 1
          }
          exit 0
      - name: Generate Hashes File
        run: ./scripts/CreateHashList.ps1 ./src/XIVLauncher/publish
      - name: Attest Artifacts
        if: ${{ github.repository_owner == 'goatcorp' && github.event_name == 'push' }}
        uses: actions/attest-build-provenance@v1
        with:
          subject-path: |
            src/XIVLauncher/publish/XIVLauncher.exe
            src/XIVLauncher/publish/XIVLauncher.*.dll
            src/XIVLauncher/publish/XIVLauncher.*.exe
            src/XIVLauncher/publish/hashes.json
      - name: Build Velopack Release
        id: build-velopack
        run: |
          cd src/XIVLauncher
          $releases = Invoke-WebRequest -Uri 'https://api.github.com/repos/goatcorp/FFXIVQuickLauncher/releases'
          $current = ConvertFrom-Json -InputObject $releases.Content | Select-Object -First 1
          $refver = $env:GITHUB_REF -replace '.*/'
          echo "::set-output name=version::$refver"
          mkdir Releases
          cp .\Resources\CHANGELOG.txt .\Releases\
          $release_file = $current.assets | Where-Object -Property name -Value RELEASES -EQ
          Invoke-WebRequest -Uri $release_file.browser_download_url -OutFile .\Releases\RELEASES
          $delta_file = $current.assets | Where-Object -Property name -Value "*delta.nupkg" -Like
          Invoke-WebRequest -Uri $delta_file.browser_download_url -OutFile ".\Releases\$($delta_file.name)"
          $full_file = $current.assets | Where-Object -Property name -Value "*full.nupkg" -Like
          Invoke-WebRequest -Uri $full_file.browser_download_url -OutFile ".\Releases\$($full_file.name)"
          vpk pack -u XIVLauncher -v $refver -p .\publish\ -e XIVLauncher.exe -i .\Resources\dalamud_icon.ico
          Start-Sleep -s 60
          rm ".\Releases\$($delta_file.name)"
          rm ".\Releases\$($full_file.name)"
          rm ".\Releases\XIVLauncher-win-Portable.zip"
      - name: Attest Setup
        if: ${{ github.repository_owner == 'goatcorp' && github.event_name == 'push' }}
        uses: actions/attest-build-provenance@v1
        with:
          subject-path: |
            src/XIVLauncher/Releases/*.exe
            src/XIVLauncher/Releases/*.nupkg
            src/XIVLauncher/Releases/RELEASES
            src/XIVLauncher/Releases/releases.win.json
            src/XIVLauncher/Releases/assets.win.json
      - name: Create Release
        uses: softprops/action-gh-release@a74c6b72af54cfa997e81df42d94703d6313a2d0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: ./src/XIVLauncher/Releases/**
          name: Release ${{ steps.build-velopack.outputs.version }}
          body_path:  RELEASE.md
          prerelease: true

      # Disabled, file too large now that we're doing self-contained
      #- name: VirusTotal Scan
      #  uses: crazy-max/ghaction-virustotal@a3f74cfd584b0658320aec5e94ab6a8d16dca05f
      #  with:
      #    vt_api_key: ${{ secrets.VT_API_KEY }}
      #    files: ./src/XIVLauncher/Releases/*.exe

  build:
    name: Build on Windows
    runs-on: windows-2022
    if: "!startsWith(github.ref, 'refs/tags/')"
    permissions:
      id-token: write
      contents: read
      attestations: write
    steps:
      - uses: actions/checkout@v1
      - name: Initialize Submodules
        run: git submodule update --init --recursive
      - name: Publish XIVLauncher
        run: |
          cd src/XIVLauncher
          dotnet publish --self-contained -r win-x64 -o publish
      - name: Generate Hashes File
        run: ./scripts/CreateHashList.ps1 ./src/XIVLauncher/publish/
      - name: Attest Artifacts
        if: ${{ github.repository_owner == 'goatcorp' && github.event_name == 'push' }}
        uses: actions/attest-build-provenance@v1
        with:
          subject-path: |
            src/XIVLauncher/publish/XIVLauncher.exe
            src/XIVLauncher/publish/XIVLauncher.*.dll
            src/XIVLauncher/publish/XIVLauncher.*.exe
            src/XIVLauncher/publish/hashes.json
      - name: Upload artifact
        uses: actions/upload-artifact@master
        with:
          name: xivlauncher-artifact
          path: src/XIVLauncher/publish/
